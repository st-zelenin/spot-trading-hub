{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"TradeHistory": {
				"description": "Unified trade history model for all exchanges",
				"properties": {
					"id": {
						"type": "string",
						"description": "The ID of the trade"
					},
					"symbol": {
						"type": "string",
						"description": "The trading pair symbol"
					},
					"price": {
						"type": "number",
						"format": "double",
						"description": "The price at which the trade was executed"
					},
					"quantity": {
						"type": "number",
						"format": "double",
						"description": "The quantity of the trade"
					},
					"quoteQuantity": {
						"type": "number",
						"format": "double",
						"description": "The total value of the trade (price * quantity)"
					},
					"time": {
						"type": "string",
						"format": "date-time",
						"description": "The timestamp of the trade"
					},
					"isBuyer": {
						"type": "boolean",
						"description": "Whether the trade was a buy or sell"
					},
					"isMaker": {
						"type": "boolean",
						"description": "Whether the trade was a maker or taker"
					},
					"fee": {
						"type": "number",
						"format": "double",
						"description": "The fee amount"
					},
					"feeAsset": {
						"type": "string",
						"description": "The fee asset"
					},
					"orderId": {
						"type": "string",
						"description": "The order ID associated with the trade"
					},
					"clientOrderId": {
						"type": "string",
						"description": "The client order ID associated with the trade"
					}
				},
				"required": [
					"id",
					"symbol",
					"price",
					"quantity",
					"quoteQuantity",
					"time",
					"isBuyer",
					"isMaker",
					"orderId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_TradeHistory-Array_": {
				"description": "Base response interface for all API responses",
				"properties": {
					"success": {
						"type": "boolean",
						"description": "Indicates if the operation was successful"
					},
					"error": {
						"type": "string",
						"description": "Optional error message in case of failure"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/TradeHistory"
						},
						"type": "array",
						"description": "Optional data payload in case of success"
					}
				},
				"required": [
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ExchangeType": {
				"description": "Enum representing supported exchanges",
				"enum": [
					"BINANCE",
					"BYBIT"
				],
				"type": "string"
			},
			"ApiResponse_null_": {
				"description": "Base response interface for all API responses",
				"properties": {
					"success": {
						"type": "boolean",
						"description": "Indicates if the operation was successful"
					},
					"error": {
						"type": "string",
						"description": "Optional error message in case of failure"
					},
					"data": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true,
						"description": "Optional data payload in case of success"
					}
				},
				"required": [
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CancelOrderRequest": {
				"description": "Request body for cancelling an order",
				"properties": {
					"exchange": {
						"$ref": "#/components/schemas/ExchangeType",
						"description": "The exchange to cancel the order on",
						"example": "BINANCE"
					},
					"orderId": {
						"type": "string",
						"description": "The ID of the order to cancel",
						"example": "12345"
					},
					"symbol": {
						"type": "string",
						"description": "The trading pair symbol",
						"example": "BTCUSDT"
					}
				},
				"required": [
					"exchange",
					"orderId",
					"symbol"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CancelAllOrdersRequest": {
				"description": "Request body for cancelling all orders for a symbol",
				"properties": {
					"exchange": {
						"$ref": "#/components/schemas/ExchangeType",
						"description": "The exchange to cancel the orders on",
						"example": "BINANCE"
					},
					"symbol": {
						"type": "string",
						"description": "The trading pair symbol",
						"example": "BTCUSDT"
					}
				},
				"required": [
					"exchange",
					"symbol"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_string-or-null_": {
				"description": "Base response interface for all API responses",
				"properties": {
					"success": {
						"type": "boolean",
						"description": "Indicates if the operation was successful"
					},
					"error": {
						"type": "string",
						"description": "Optional error message in case of failure"
					},
					"data": {
						"type": "string",
						"nullable": true,
						"description": "Optional data payload in case of success"
					}
				},
				"required": [
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TrailingTakeProfitLimitSellOrderRequest": {
				"description": "Request body for placing a trailing take profit limit sell order",
				"properties": {
					"exchange": {
						"$ref": "#/components/schemas/ExchangeType",
						"description": "The exchange to place the order on",
						"example": "BINANCE"
					},
					"symbol": {
						"type": "string",
						"description": "The trading pair symbol",
						"example": "BTCUSDT"
					},
					"quantity": {
						"type": "number",
						"format": "double",
						"description": "The quantity to sell",
						"example": 0.01
					},
					"limitPrice": {
						"type": "number",
						"format": "double",
						"description": "The limit price for the order",
						"example": 50000
					}
				},
				"required": [
					"exchange",
					"symbol",
					"quantity",
					"limitPrice"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "spot-trading-hub",
		"version": "1.0.0",
		"description": "A Node.js application for managing crypto exchange spot orders",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/trade-history/history": {
			"get": {
				"operationId": "GetTradeHistory",
				"responses": {
					"200": {
						"description": "Trade history response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_TradeHistory-Array_"
								}
							}
						}
					}
				},
				"description": "Get trade history for a specific exchange",
				"tags": [
					"Trade History"
				],
				"security": [],
				"parameters": [
					{
						"description": "The exchange to get trade history from",
						"in": "query",
						"name": "exchange",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ExchangeType"
						}
					},
					{
						"description": "The symbol to filter trades",
						"in": "query",
						"name": "symbol",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/orders/cancel": {
			"post": {
				"operationId": "CancelOrder",
				"responses": {
					"200": {
						"description": "Order cancelled successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"400": {
						"description": "Bad request, missing or invalid parameters"
					},
					"500": {
						"description": "Server error or exchange error"
					}
				},
				"description": "Cancels an order on the specified exchange",
				"tags": [
					"Orders"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "The order cancellation request",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CancelOrderRequest",
								"description": "The order cancellation request"
							}
						}
					}
				}
			}
		},
		"/orders/cancel-all": {
			"post": {
				"operationId": "CancelAllOrders",
				"responses": {
					"200": {
						"description": "All orders cancelled successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_null_"
								}
							}
						}
					},
					"400": {
						"description": "Bad request, missing or invalid parameters"
					},
					"500": {
						"description": "Server error or exchange error"
					}
				},
				"description": "Cancels all orders for a symbol on the specified exchange",
				"tags": [
					"Orders"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "The order cancellation request",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CancelAllOrdersRequest",
								"description": "The order cancellation request"
							}
						}
					}
				}
			}
		},
		"/orders/trailing-sell": {
			"post": {
				"operationId": "PlaceTrailingTakeProfitLimitSellOrder",
				"responses": {
					"200": {
						"description": "Order placed successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_string-or-null_"
								}
							}
						}
					},
					"400": {
						"description": "Bad request, missing or invalid parameters"
					},
					"500": {
						"description": "Server error or exchange error"
					}
				},
				"description": "Places a trailing take profit limit sell order on the specified exchange",
				"tags": [
					"Orders"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "The order request",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TrailingTakeProfitLimitSellOrderRequest",
								"description": "The order request"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/api"
		}
	],
	"tags": [
		{
			"name": "Orders",
			"description": "Order management endpoints"
		},
		{
			"name": "Trade History",
			"description": "Trade history endpoints"
		}
	]
}